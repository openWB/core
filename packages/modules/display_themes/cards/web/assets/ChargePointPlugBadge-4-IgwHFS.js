import{Q as p,o as n,e as c,i as m,F as P,A as C,z as _,j as x,l,n as S,p as w,s as k,x as u}from"./vendor-Cv1UtYRW.js";import{_ as y}from"./vendor-inkline-7C7Ddj37.js";import{u as v}from"./index-AtLAf1dw.js";import{l as N,z as b,A as D,B as z,F as B}from"./vendor-fortawesome-CVmDIOjI.js";const d={props:{data:{required:!1,type:Array,default:void 0},socData:{required:!1,type:Array,default:void 0},width:{type:Number,default:250},height:{type:Number,default:70},gap:{type:Number,default:3},stroke:{type:Number,default:3},min:{type:Number,default:0},max:{type:Number,default:1},color:{type:String,default:"var(--color--primary)"},colorNegative:{type:String,default:void 0}},computed:{highestPoint(){return Math.max(1,this.max,...this.slicedData)},lowestPoint(){return Math.min(0,this.min,...this.slicedData)},maxPoints(){return Math.floor(this.width/(this.stroke+this.gap))},slicedData(){if(this.data)return this.data.slice(-this.maxPoints)},slicedSocData(){if(this.socData)return this.socData.slice(-this.maxPoints)},zeroHeight(){return this.height-(0-this.lowestPoint)/(this.highestPoint-this.lowestPoint)*this.height},coordinates(){if(this.data)return this.calculateCoordinates(this.slicedData,this.lowestPoint,this.highestPoint)},socCoordinates(){if(this.socData)return this.calculateCoordinates(this.slicedSocData,0,100)},bars(){if(this.coordinates){const t=[];return this.coordinates.forEach(s=>{const e=s.x,r=s.y,o=this.stroke,a=Math.min(r,this.zeroHeight),i=Math.abs(r-this.zeroHeight),h=r>this.zeroHeight;t.push({x:e,y:a,width:o,height:i,negative:h})}),t}},socPath(){if(this.socCoordinates&&this.socCoordinates.length>0){let s=this.socCoordinates.slice(0,1)[0],e=this.socCoordinates.slice(-1)[0];var t=`M 0,${this.height}`;return t+=` L 0,${s.y}`,this.socCoordinates.forEach(r=>{t+=` L ${r.x+this.stroke/2},${r.y}`}),t+=` L ${e.x+this.stroke},${e.y} L ${e.x+this.stroke},${this.height} Z`,t}}},methods:{calculateCoordinates(t,s,e){const r=[];return t.forEach((o,a)=>{const i=a*this.width/this.maxPoints+1,h=this.height-(o-s)/(e-s)*this.height;r.push({x:i,y:h})}),r}}},g=()=>{p(t=>({"3f7db06a":t.color,"1de516bf":t.colorNegative}))},f=d.setup;d.setup=f?(t,s)=>(g(),f(t,s)):g;const I=["viewBox"],q=["d"],M=["x","y","width","height"],A=["y1","x2","y2"];function E(t,s,e,r,o,a){return n(),c("svg",{class:"spark-line",viewBox:`0 0 ${e.width} ${e.height}`,width:"100%",preserveAspectRatio:"xMinYMin"},[e.socData?(n(),c("path",{key:0,class:"soc-path",d:a.socPath},null,8,q)):m("",!0),(n(!0),c(P,null,C(a.bars,i=>(n(),c("rect",{key:i.x,x:i.x,y:i.y,width:i.width,height:i.height,class:_(e.colorNegative&&i.negative?"negative":"")},null,10,M))),128)),x("line",{class:"zero-line",x1:0,y1:a.zeroHeight,x2:e.width,y2:a.zeroHeight},null,8,A)],8,I)}const R=y(d,[["render",E],["__scopeId","data-v-22cdf82b"]]);N.add(b,D,z);const H={name:"ChargePointStateBadge",components:{FontAwesomeIcon:B},props:{chargePointId:{required:!0,type:Array},showEnergyCharged:{required:!1,type:Boolean,default:!0}},data(){return{mqttStore:v()}},computed:{plugState(){var t=!1;return this.chargePointId.forEach(s=>{t|=this.mqttStore.getChargePointPlugState(s)}),t},chargeState(){var t=!1;return this.chargePointId.forEach(s=>{t|=this.mqttStore.getChargePointChargeState(s)}),t},stateIcon(){return this.plugState?this.chargeState?["fas","fa-plug-circle-bolt"]:["fas","fa-plug-circle-check"]:["fas","fa-plug-circle-xmark"]},stateClass(){return this.plugState?this.chargeState?"_color:success":"_color:warning":"_color:gray"}}},L={key:0,class:"_padding-left:1"};function V(t,s,e,r,o,a){const i=l("font-awesome-icon"),h=l("i-badge");return n(),S(h,{size:"lg"},{default:w(()=>[k(i,{"fixed-width":"",icon:a.stateIcon,class:_(a.stateClass)},null,8,["icon","class"]),a.plugState&&e.showEnergyCharged?(n(),c("span",L,u(o.mqttStore.getChargePointImportedSincePlugged(e.chargePointId).energy)+" / "+u(o.mqttStore.getChargePointImportedSincePlugged(e.chargePointId).range),1)):m("",!0)]),_:1})}const X=y(H,[["render",V]]);export{X as C,R as S};
