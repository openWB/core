"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkopenwb_ui_settings"] = self["webpackChunkopenwb_ui_settings"] || []).push([["DailyChart"],{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/views/DailyChart.vue?vue&type=script&lang=js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/views/DailyChart.vue?vue&type=script&lang=js ***!
  \***************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ \"./node_modules/@fortawesome/fontawesome-svg-core/index.mjs\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.mjs\");\n/* harmony import */ var _fortawesome_vue_fontawesome__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/vue-fontawesome */ \"./node_modules/@fortawesome/vue-fontawesome/index.es.js\");\n/* harmony import */ var _components_mixins_ComponentState_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/mixins/ComponentState.vue */ \"./src/components/mixins/ComponentState.vue\");\n/* harmony import */ var vue_chartjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vue-chartjs */ \"./node_modules/vue-chartjs/dist/index.js\");\n/* harmony import */ var chartjs_adapter_luxon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! chartjs-adapter-luxon */ \"./node_modules/chartjs-adapter-luxon/dist/chartjs-adapter-luxon.esm.js\");\n/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! hammerjs */ \"./node_modules/hammerjs/hammer.js\");\n/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var chartjs_plugin_zoom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! chartjs-plugin-zoom */ \"./node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js\");\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! chart.js */ \"./node_modules/chart.js/dist/chart.mjs\");\n\n\n\n\n_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_1__.library.add(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__.faChargingStation, _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__.faCarBattery, _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__.faSolarPanel, _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__.faGaugeHigh);\n\n\n\n\n\n\nchart_js__WEBPACK_IMPORTED_MODULE_8__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_8__.Tooltip, chart_js__WEBPACK_IMPORTED_MODULE_8__.Legend, chart_js__WEBPACK_IMPORTED_MODULE_8__.LineController, chart_js__WEBPACK_IMPORTED_MODULE_8__.LineElement, chart_js__WEBPACK_IMPORTED_MODULE_8__.PointElement, chart_js__WEBPACK_IMPORTED_MODULE_8__.LinearScale, chart_js__WEBPACK_IMPORTED_MODULE_8__.TimeScale, chart_js__WEBPACK_IMPORTED_MODULE_8__.Filler, chartjs_plugin_zoom__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: \"OpenwbDailyChart\",\n  components: {\n    Line: vue_chartjs__WEBPACK_IMPORTED_MODULE_9__.Line,\n    FontAwesomeIcon: _fortawesome_vue_fontawesome__WEBPACK_IMPORTED_MODULE_2__.FontAwesomeIcon\n  },\n  mixins: [_components_mixins_ComponentState_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]],\n  emits: [\"sendCommand\"],\n  data() {\n    return {\n      mqttTopicsToSubscribe: [\"openWB/general/extern\", \"openWB/log/daily/#\", \"openWB/system/device/+/component/+/config\", \"openWB/chargepoint/+/config\", \"openWB/vehicle/+/name\"],\n      currentDay: \"\",\n      dailyChartRequestData: {\n        day: \"\",\n        month: \"\",\n        year: \"\"\n      },\n      datasetTemplates: {\n        \"counter-power\": {\n          label: \"ZÃ¤hler\",\n          jsonKey: null,\n          borderColor: \"rgba(255, 0, 0, 0.7)\",\n          backgroundColor: \"rgba(255, 10, 13, 0.3)\",\n          fill: true,\n          lineTension: 0.2,\n          hidden: false,\n          borderWidth: 1,\n          data: null,\n          yAxisID: \"y1\",\n          parsing: {\n            xAxisKey: \"timestamp\",\n            yAxisKey: null\n          }\n        },\n        \"pv-power\": {\n          label: \"PV\",\n          jsonKey: null,\n          borderColor: \"rgba(0, 255, 0, 0.7)\",\n          backgroundColor: \"rgba(10, 255, 13, 0.3)\",\n          fill: true,\n          lineTension: 0.2,\n          hidden: true,\n          borderWidth: 1,\n          data: null,\n          yAxisID: \"y1\",\n          parsing: {\n            xAxisKey: \"timestamp\",\n            yAxisKey: null\n          }\n        },\n        \"bat-power\": {\n          label: \"Speicher\",\n          jsonKey: null,\n          borderColor: \"rgba(255, 153, 13, 0.7)\",\n          backgroundColor: \"rgba(200, 255, 13, 0.3)\",\n          fill: false,\n          lineTension: 0.2,\n          hidden: true,\n          borderWidth: 1,\n          data: null,\n          yAxisID: \"y1\",\n          parsing: {\n            xAxisKey: \"timestamp\",\n            yAxisKey: null\n          }\n        },\n        \"bat-soc\": {\n          label: \"Speicher SoC\",\n          jsonKey: null,\n          borderColor: \"rgba(255, 153, 13, 0.7)\",\n          backgroundColor: \"rgba(200, 255, 13, 0.3)\",\n          borderDash: [10, 5],\n          hidden: true,\n          fill: false,\n          lineTension: 0.2,\n          borderWidth: 2,\n          data: null,\n          yAxisID: \"y2\",\n          parsing: {\n            xAxisKey: \"timestamp\",\n            yAxisKey: null\n          }\n        },\n        \"cp-power\": {\n          label: \"Ladepunkt\",\n          jsonKey: null,\n          borderColor: \"rgba(0, 0, 255, 0.7)\",\n          backgroundColor: \"rgba(0, 0, 255, 0.3)\",\n          fill: true,\n          lineTension: 0.2,\n          hidden: true,\n          borderWidth: 1,\n          data: null,\n          yAxisID: \"y1\",\n          parsing: {\n            xAxisKey: \"timestamp\",\n            yAxisKey: null\n          }\n        },\n        \"ev-soc\": {\n          label: \"Fahrzeug SoC\",\n          jsonKey: null,\n          borderColor: \"rgba(0, 0, 255, 0.7)\",\n          backgroundColor: \"rgba(0, 0, 255, 0.3)\",\n          borderDash: [10, 5],\n          hidden: true,\n          fill: false,\n          lineTension: 0.2,\n          borderWidth: 2,\n          data: null,\n          yAxisID: \"y2\",\n          parsing: {\n            xAxisKey: \"timestamp\",\n            yAxisKey: null\n          }\n        }\n      },\n      chartOptions: {\n        plugins: {\n          title: {\n            display: false\n          },\n          tooltip: {\n            enabled: true\n          },\n          legend: {\n            display: true\n          },\n          zoom: {\n            // Container for pan options\n            pan: {\n              // Boolean to enable panning\n              enabled: true,\n              // Panning directions. Remove the appropriate direction to disable\n              // Eg. 'y' would only allow panning in the y direction\n              mode: \"x\",\n              threshold: 5\n            },\n            // Container for zoom options\n            zoom: {\n              // Boolean to enable zooming\n              wheel: {\n                enabled: true\n              },\n              pinch: {\n                enabled: true\n              },\n              // Zooming directions. Remove the appropriate direction to disable\n              // Eg. 'y' would only allow zooming in the y direction\n              mode: \"x\"\n            }\n          }\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: \"time\",\n            time: {\n              unit: \"minute\",\n              tooltipFormat: \"DD T\"\n            },\n            display: true,\n            title: {\n              display: true,\n              text: \"Zeit\"\n            },\n            ticks: {\n              source: \"timestamp\",\n              font: {\n                size: 12\n              },\n              // color: tickColor,\n              maxTicksLimit: 24\n            },\n            grid: {\n              // color: xGridColor,\n            }\n          },\n          y1: {\n            // horizontal line for values displayed on the left side (power, kW)\n            position: \"left\",\n            type: \"linear\",\n            display: \"auto\",\n            suggestedMin: 0,\n            suggestedMax: 0,\n            title: {\n              font: {\n                size: 12\n              },\n              display: true,\n              text: \"Leistung [kW]\"\n              // color: fontColor\n            },\n\n            grid: {\n              // color: gridColor\n            },\n            ticks: {\n              font: {\n                size: 12\n              },\n              stepSize: 0.2,\n              maxTicksLimit: 11\n              // color: tickColor\n            }\n          },\n\n          y2: {\n            // horizontal line for values displayed on the right side (SoC, %)\n            position: \"right\",\n            type: \"linear\",\n            display: \"auto\",\n            suggestedMin: 0,\n            suggestedMax: 100,\n            title: {\n              font: {\n                size: 12\n              },\n              display: true,\n              text: \"SoC [%]\"\n              // color: fontColor\n            },\n\n            grid: {\n              display: false\n              // color: gridSocColor,\n            },\n\n            ticks: {\n              font: {\n                size: 12\n              },\n              stepSize: 10,\n              maxTicksLimit: 11\n              // color: tickColor\n            }\n          }\n        }\n      },\n\n      chartDatasets: {\n        datasets: []\n      }\n    };\n  },\n  computed: {\n    dailyChartDate: {\n      get() {\n        return this.dailyChartRequestData.year + \"-\" + this.dailyChartRequestData.month + \"-\" + this.dailyChartRequestData.day;\n      },\n      set(newValue) {\n        let splitDate = newValue.split(\"-\");\n        this.dailyChartRequestData.year = splitDate[0];\n        this.dailyChartRequestData.month = splitDate[1];\n        this.dailyChartRequestData.day = splitDate[2];\n      }\n    },\n    commandData() {\n      return {\n        day: this.dailyChartRequestData.year + this.dailyChartRequestData.month + this.dailyChartRequestData.day\n      };\n    },\n    chartDataRead() {\n      return this.chartDataObject != undefined;\n    },\n    chartDataHasEntries() {\n      return this.chartDataObject.length > 0;\n    },\n    chartTotals() {\n      if (this.$store.state.mqtt[\"openWB/log/daily/\" + this.commandData.day]) {\n        if (Object.prototype.hasOwnProperty.call(this.$store.state.mqtt[\"openWB/log/daily/\" + this.commandData.day], \"totals\")) {\n          return this.$store.state.mqtt[\"openWB/log/daily/\" + this.commandData.day].totals;\n        } else {\n          // code for old log data without totals\n          var diff = {\n            bat: {},\n            counter: {},\n            pv: {},\n            cp: {}\n          };\n          const keysToProcess = [\"imported\", \"exported\"];\n          const process = (startValue, endValue, path) => {\n            // console.log(\"process:\", path);\n            const keys = path.split(\".\");\n            if (keysToProcess.includes(keys[keys.length - 1])) {\n              if (!Object.prototype.hasOwnProperty.call(diff[keys[0]], [keys[1]])) {\n                diff[keys[0]][keys[1]] = {};\n              }\n              diff[keys[0]][keys[1]][keys[2]] = Math.floor(endValue - startValue);\n            }\n          };\n          const traverse = (startObject, endObject, method, currentPath = \"\") => {\n            for (var element in endObject) {\n              if (endObject[element] !== null && typeof endObject[element] == \"object\") {\n                //going one step down in the object tree!!\n                traverse(startObject[element], endObject[element], method, currentPath ? currentPath + \".\" + element : element);\n              } else {\n                method.apply(this, [startObject[element], endObject[element], currentPath ? currentPath + \".\" + element : element]);\n              }\n            }\n          };\n          var chartEntries = this.$store.state.mqtt[\"openWB/log/daily/\" + this.commandData.day];\n          const start = chartEntries[0];\n          const end = chartEntries[chartEntries.length - 1];\n          traverse(start, end, process);\n          return diff;\n        }\n      }\n      return undefined;\n    },\n    chartDataObject() {\n      if (this.$store.state.mqtt[\"openWB/log/daily/\" + this.commandData.day]) {\n        var chartEntries = this.$store.state.mqtt[\"openWB/log/daily/\" + this.commandData.day];\n        if (Object.prototype.hasOwnProperty.call(chartEntries, \"entries\")) {\n          console.debug(\"upgraded chart data received\");\n          chartEntries = chartEntries.entries;\n        }\n        var lastRow = undefined;\n        var myData = JSON.parse(JSON.stringify(chartEntries)).map(row => {\n          row.timestamp = row.timestamp * 1000;\n          if (lastRow !== undefined) {\n            const timeDiff = row.timestamp - lastRow.timestamp;\n            var baseObjectsToProcess = [\"pv\", \"counter\", \"bat\", \"cp\"];\n            baseObjectsToProcess.forEach(baseObject => {\n              Object.entries(row[baseObject]).forEach(([key, value]) => {\n                if (lastRow[baseObject][key]) {\n                  Object.keys(value).forEach(() => {\n                    switch (baseObject) {\n                      case \"pv\":\n                        if (Object.prototype.hasOwnProperty.call(row[baseObject][key], \"exported\") && Object.prototype.hasOwnProperty.call(lastRow[baseObject][key], \"exported\")) {\n                          row[baseObject][key].power = Math.floor((row[baseObject][key].exported - lastRow[baseObject][key].exported) / (timeDiff / 1000 / 3600)) / 1000;\n                        }\n                        break;\n                      case \"counter\":\n                        if (Object.prototype.hasOwnProperty.call(row[baseObject][key], \"imported\") && Object.prototype.hasOwnProperty.call(lastRow[baseObject][key], \"imported\") && Object.prototype.hasOwnProperty.call(row[baseObject][key], \"exported\") && Object.prototype.hasOwnProperty.call(lastRow[baseObject][key], \"exported\")) {\n                          row[baseObject][key].power = Math.floor((row[baseObject][key].imported - lastRow[baseObject][key].imported - (row[baseObject][key].exported - lastRow[baseObject][key].exported)) / (timeDiff / 1000 / 3600)) / 1000;\n                          row[baseObject][key].powerImport = Math.max(0, row[baseObject][key].power);\n                          row[baseObject][key].powerExport = Math.min(0, row[baseObject][key].power);\n                        }\n                        break;\n                      case \"bat\":\n                        if (Object.prototype.hasOwnProperty.call(row[baseObject][key], \"imported\") && Object.prototype.hasOwnProperty.call(lastRow[baseObject][key], \"imported\") && Object.prototype.hasOwnProperty.call(row[baseObject][key], \"exported\") && Object.prototype.hasOwnProperty.call(lastRow[baseObject][key], \"exported\")) {\n                          row[baseObject][key].power = Math.floor((row[baseObject][key].imported - lastRow[baseObject][key].imported - (row[baseObject][key].exported - lastRow[baseObject][key].exported)) / (timeDiff / 1000 / 3600)) / 1000;\n                          row[baseObject][key].powerImport = Math.max(0, row[baseObject][key].power);\n                          row[baseObject][key].powerExport = Math.min(0, row[baseObject][key].power);\n                        }\n                        break;\n                      case \"cp\":\n                        if (Object.prototype.hasOwnProperty.call(row[baseObject][key], \"imported\") && Object.prototype.hasOwnProperty.call(lastRow[baseObject][key], \"imported\")) {\n                          row[baseObject][key].power = Math.floor((row[baseObject][key].imported - lastRow[baseObject][key].imported) / (timeDiff / 1000 / 3600)) / 1000;\n                        }\n                        break;\n                    }\n                  });\n                }\n              });\n            });\n            lastRow = row;\n            return row;\n          } else {\n            lastRow = row;\n            return;\n          }\n        });\n        myData.shift();\n        return myData;\n      }\n      return undefined;\n    },\n    chartData() {\n      // add all datasets available in the last entry\n      var baseObjectsToProcess = [\"pv\", \"counter\", \"bat\", \"cp\", \"ev\"];\n      const lastElement = this.chartDataObject[this.chartDataObject.length - 1];\n      if (lastElement) {\n        baseObjectsToProcess.forEach(baseObject => {\n          Object.entries(lastElement[baseObject]).forEach(([key, value]) => {\n            Object.keys(value).forEach(entryKey => {\n              this.initDataset(baseObject, key, entryKey);\n            });\n          });\n        });\n      }\n      return this.chartDatasets;\n    }\n  },\n  methods: {\n    getCardSubtype(elementKey) {\n      switch (elementKey) {\n        case \"bat\":\n          return \"warning\";\n        case \"counter\":\n          return \"danger\";\n        case \"cp\":\n          return \"primary\";\n        case \"pv\":\n          return \"success\";\n        default:\n          return \"secondary\";\n      }\n    },\n    getCardIcon(elementKey) {\n      switch (elementKey) {\n        case \"bat\":\n          return [\"fas\", \"car-battery\"];\n        case \"counter\":\n          return [\"fas\", \"gauge-high\"];\n        case \"cp\":\n          return [\"fas\", \"charging-station\"];\n        case \"pv\":\n          return [\"fas\", \"solar-panel\"];\n        default:\n          return undefined;\n      }\n    },\n    getDatasetHidden(baseObject, objectKey) {\n      // ToDo\n      console.debug(\"getDatasetHidden\", baseObject, objectKey);\n      return false;\n    },\n    getTotalsLabel(groupKey, componentKey = undefined, measurementKey = undefined) {\n      var label = \"*test*\";\n      if (!componentKey && !measurementKey) {\n        // console.debug(\"getTotalsLabel for group:\", groupKey);\n        switch (groupKey) {\n          case \"bat\":\n            return \"Speicher\";\n          case \"counter\":\n            return \"ZÃ¤hler\";\n          case \"pv\":\n            return \"Wechselrichter\";\n          case \"cp\":\n            return \"Ladepunkte\";\n          default:\n            console.warn(\"unknown group key:\", groupKey);\n        }\n        return \"*\" + groupKey + \"*\";\n      }\n      if (componentKey && !measurementKey) {\n        // console.debug(\n        // \t\"getLabel for component:\",\n        // \tgroupKey,\n        // \tcomponentKey\n        // );\n        if (componentKey == \"all\") {\n          return \"Summe\";\n        } else {\n          var objectId = componentKey.match(/\\d+$/);\n          var topic = \"\";\n          switch (groupKey) {\n            case \"cp\":\n              topic = \"openWB/chargepoint/\" + objectId + \"/config\";\n              break;\n            case \"ev\":\n              topic = \"openWB/vehicle/\" + objectId + \"/name\";\n              break;\n            default:\n              topic = \"openWB/system/device/+/component/\" + objectId + \"/config\";\n          }\n          var objectTopic = Object.keys(this.getWildcardTopics(topic))[0];\n          // console.debug(objectTopic);\n          if (objectTopic) {\n            switch (groupKey) {\n              case \"pv\":\n                return this.$store.state.mqtt[objectTopic].name;\n              case \"counter\":\n                return this.$store.state.mqtt[objectTopic].name;\n              case \"bat\":\n                return this.$store.state.mqtt[objectTopic].name;\n              case \"cp\":\n                return this.$store.state.mqtt[objectTopic].name;\n              case \"ev\":\n                return this.$store.state.mqtt[objectTopic];\n              default:\n                console.warn(\"unknown group key:\", groupKey);\n            }\n          } else {\n            console.warn(\"topic not found for:\", groupKey, componentKey);\n          }\n          return \"+\" + groupKey + \"+\" + componentKey + \"+\";\n        }\n      }\n      if (componentKey && measurementKey) {\n        // console.debug(\n        // \t\"getTotalsLabel for measurement\",\n        // \tgroupKey,\n        // \tcomponentKey,\n        // \tmeasurementKey\n        // );\n        switch (groupKey) {\n          case \"bat\":\n          case \"cp\":\n            switch (measurementKey) {\n              case \"imported\":\n                return \"Ladung\";\n              case \"exported\":\n                return \"Entladung\";\n              default:\n                console.warn(\"unknown measurement key:\", groupKey, measurementKey);\n            }\n            break;\n          case \"counter\":\n            switch (measurementKey) {\n              case \"imported\":\n                return \"Bezug/Verbrauch\";\n              case \"exported\":\n                return \"Einspeisung/Erzeugung\";\n              default:\n                console.warn(\"unknown measurement key:\", groupKey, measurementKey);\n            }\n            break;\n          case \"pv\":\n            switch (measurementKey) {\n              case \"exported\":\n                return \"Erzeugung\";\n              default:\n                console.warn(\"unknown measurement key:\", groupKey, measurementKey);\n            }\n            break;\n          default:\n            console.warn(\"unknown group key:\", groupKey);\n        }\n        return \"*\" + groupKey + \"+\" + componentKey + \"+\" + measurementKey + \"*\";\n      }\n      return label;\n    },\n    getDatasetLabel(baseObject, objectKey, elementKey, datasetKey) {\n      // console.debug(\n      // \t\"getDatasetLabel\",\n      // \tbaseObject,\n      // \tobjectKey,\n      // \telementKey,\n      // \tdatasetKey\n      // );\n      var label = \"*\" + datasetKey;\n      if (objectKey == \"all\") {\n        switch (baseObject) {\n          case \"pv\":\n            label = \"PV (Summe)\";\n            break;\n          case \"bat\":\n            label = \"Speicher\";\n            switch (elementKey) {\n              case \"imported\":\n                label += \" (Ladung, Summe)\";\n                break;\n              case \"exported\":\n                label += \" (Entladung, Summe)\";\n                break;\n              case \"soc\":\n                label += \" SoC (Summe)\";\n                break;\n              default:\n                label += \" (Summe)\";\n            }\n            break;\n          case \"cp\":\n            label = \"Ladepunkte\";\n            switch (elementKey) {\n              case \"imported\":\n                label += \" (Ladung, Summe)\";\n                break;\n              case \"exported\":\n                label += \" (Entladung, Summe)\";\n                break;\n              case \"soc\":\n                label += \" SoC (Summe)\";\n                break;\n              default:\n                label += \" (Summe)\";\n            }\n            break;\n        }\n      } else {\n        var objectId = objectKey.match(/\\d+$/);\n        var topic = \"\";\n        switch (baseObject) {\n          case \"cp\":\n            topic = \"openWB/chargepoint/\" + objectId + \"/config\";\n            break;\n          case \"ev\":\n            topic = \"openWB/vehicle/\" + objectId + \"/name\";\n            break;\n          default:\n            topic = \"openWB/system/device/+/component/\" + objectId + \"/config\";\n        }\n        var objectTopic = Object.keys(this.getWildcardTopics(topic))[0];\n        if (objectTopic in this.$store.state.mqtt) {\n          switch (baseObject) {\n            case \"pv\":\n              label = this.$store.state.mqtt[objectTopic].name;\n              break;\n            case \"counter\":\n              label = this.$store.state.mqtt[objectTopic].name;\n              switch (elementKey) {\n                case \"imported\":\n                  label += \" (Bezug)\";\n                  break;\n                case \"exported\":\n                  label += \" (Einspeisung)\";\n                  break;\n              }\n              break;\n            case \"bat\":\n              label = this.$store.state.mqtt[objectTopic].name;\n              switch (elementKey) {\n                case \"imported\":\n                  label += \" (Ladung)\";\n                  break;\n                case \"exported\":\n                  label += \" (Entladung)\";\n                  break;\n                case \"soc\":\n                  label += \" SoC\";\n                  break;\n              }\n              break;\n            case \"cp\":\n              label = this.$store.state.mqtt[objectTopic].name;\n              switch (elementKey) {\n                case \"imported\":\n                  label += \" (Ladung)\";\n                  break;\n                case \"exported\":\n                  label += \" (Entladung)\";\n                  break;\n                case \"soc\":\n                  label += \" SoC\";\n                  break;\n              }\n              break;\n            case \"ev\":\n              label = this.$store.state.mqtt[objectTopic];\n              break;\n          }\n        } else {\n          console.warn(\"could not get name for dataset\", datasetKey);\n        }\n      }\n      return label;\n    },\n    getDatasetIndex(datasetKey) {\n      let index = this.chartDatasets.datasets.findIndex(dataset => {\n        return dataset.jsonKey == datasetKey;\n      });\n      if (index != -1) {\n        return index;\n      }\n      return;\n    },\n    addDataset(baseObject, objectKey, elementKey, datasetKey) {\n      console.debug(\"adding new dataset\", baseObject, objectKey, elementKey, datasetKey);\n      var datasetTemplate = baseObject + \"-\" + elementKey;\n      if (this.datasetTemplates[datasetTemplate]) {\n        var newDataset = JSON.parse(JSON.stringify(this.datasetTemplates[datasetTemplate]));\n        newDataset.parsing.yAxisKey = datasetKey;\n        newDataset.jsonKey = datasetKey;\n        newDataset.data = this.chartDataObject;\n        newDataset.label = this.getDatasetLabel(baseObject, objectKey, elementKey, datasetKey);\n        if (newDataset.labelSuffix != undefined) {\n          newDataset.label = newDataset.label + newDataset.labelSuffix;\n        }\n        if (objectKey == \"all\") {\n          newDataset.hidden = false;\n        }\n        return this.chartDatasets.datasets.push(newDataset) - 1;\n      } else {\n        console.warn(\"no matching template found for: \" + datasetKey + \" with template: \" + datasetTemplate);\n      }\n      return;\n    },\n    initDataset(baseObject, objectKey, elementKey) {\n      const elementKeysToAdd = [\"power\", \"soc\"];\n      const datasetKey = baseObject + \".\" + objectKey + \".\" + elementKey;\n      if (elementKeysToAdd.includes(elementKey)) {\n        var index = this.getDatasetIndex(datasetKey);\n        const hidden = this.getDatasetHidden(baseObject, objectKey);\n        if (index == undefined && !hidden) {\n          index = this.addDataset(baseObject, objectKey, elementKey, datasetKey);\n        }\n        if (index != undefined && hidden) {\n          console.info(\"component hidden:\", baseObject, objectKey, elementKey, index);\n          this.chartDatasets.datasets.splice(index, 1);\n        }\n      }\n    },\n    requestDailyChart() {\n      let myForm = document.forms[\"dailyChartForm\"];\n      if (!myForm.reportValidity()) {\n        console.log(\"form invalid\");\n        return;\n      } else {\n        this.chartDatasets.datasets = [];\n        this.$emit(\"sendCommand\", {\n          command: \"getDailyLog\",\n          data: this.commandData\n        });\n      }\n    }\n  },\n  mounted() {\n    const today = new Date();\n    this.currentDay = this.dailyChartDate = today.getFullYear() + \"-\" + String(today.getMonth() + 1).padStart(2, \"0\") + \"-\" + String(today.getDate()).padStart(2, \"0\");\n    this.requestDailyChart();\n  }\n});\n\n//# sourceURL=webpack://openwb-ui-settings/./src/views/DailyChart.vue?./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use%5B0%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D.use%5B0%5D");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/views/DailyChart.vue?vue&type=template&id=2182f87f":
/*!*******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/views/DailyChart.vue?vue&type=template&id=2182f87f ***!
  \*******************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": function() { return /* binding */ render; }\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\nconst _hoisted_1 = {\n  class: \"dailyChart\"\n};\nconst _hoisted_2 = {\n  name: \"dailyChartForm\"\n};\nconst _hoisted_3 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 1\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_openwb_base_text_input = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"openwb-base-text-input\");\n  const _component_openwb_base_click_button = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"openwb-base-click-button\");\n  const _component_openwb_base_card = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"openwb-base-card\");\n  const _component_openwb_base_alert = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"openwb-base-alert\");\n  const _component_Line = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"Line\");\n  const _component_font_awesome_icon = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"font-awesome-icon\");\n  const _component_openwb_base_heading = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"openwb-base-heading\");\n  return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_1, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"form\", _hoisted_2, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_card, {\n    title: \"Filter\",\n    collapsible: true,\n    collapsed: false\n  }, {\n    footer: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_3, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_click_button, {\n      class: \"col-4 btn-success\",\n      onButtonClicked: _cache[1] || (_cache[1] = $event => $options.requestDailyChart())\n    }, {\n      default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\" Daten anfordern \")]),\n      _: 1 /* STABLE */\n    })])]),\n\n    default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_text_input, {\n      title: \"Datum\",\n      subtype: \"date\",\n      min: \"2018-01-01\",\n      max: $data.currentDay,\n      modelValue: $options.dailyChartDate,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.dailyChartDate = $event)\n    }, null, 8 /* PROPS */, [\"max\", \"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), !$options.chartDataRead ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createBlock)(_component_openwb_base_alert, {\n    key: 0,\n    subtype: \"info\"\n  }, {\n    default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\" Es wurden noch keine Daten abgerufen. \")]),\n    _: 1 /* STABLE */\n  })) : ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_4, [!$options.chartDataHasEntries ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createBlock)(_component_openwb_base_alert, {\n    key: 0,\n    subtype: \"info\"\n  }, {\n    default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\" Es konnten keine Daten fÃ¼r diesen Zeitraum gefunden werden. \")]),\n    _: 1 /* STABLE */\n  })) : ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_5, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_card, {\n    title: \"Diagramm\",\n    collapsible: true,\n    collapsed: false\n  }, {\n    default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_Line, {\n      chartData: $options.chartData,\n      chartOptions: $data.chartOptions\n    }, null, 8 /* PROPS */, [\"chartData\", \"chartOptions\"])]),\n    _: 1 /* STABLE */\n  }), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_card, {\n    title: \"Summen\",\n    collapsible: true,\n    collapsed: true\n  }, {\n    default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)($options.chartTotals, (group, groupKey) => {\n      return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createBlock)(_component_openwb_base_card, {\n        key: groupKey,\n        collapsible: true,\n        collapsed: true,\n        subtype: $options.getCardSubtype(groupKey)\n      }, {\n        header: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_font_awesome_icon, {\n          \"fixed-width\": \"\",\n          icon: $options.getCardIcon(groupKey)\n        }, null, 8 /* PROPS */, [\"icon\"]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\" \" + (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.getTotalsLabel(groupKey)), 1 /* TEXT */)]),\n\n        default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(group, (component, componentKey) => {\n          return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", {\n            key: componentKey\n          }, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_heading, null, {\n            default: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(() => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)((0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.getTotalsLabel(groupKey, componentKey)), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(true), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)(component, (measurement, measurementKey) => {\n            return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", {\n              key: measurementKey\n            }, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_openwb_base_text_input, {\n              title: $options.getTotalsLabel(groupKey, componentKey, measurementKey),\n              readonly: \"\",\n              class: \"text-right\",\n              unit: \"kWh\",\n              \"model-value\": _ctx.formatNumber(measurement / 1000, 3)\n            }, null, 8 /* PROPS */, [\"title\", \"model-value\"])]);\n          }), 128 /* KEYED_FRAGMENT */))]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"subtype\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]))]))])]);\n}\n\n//# sourceURL=webpack://openwb-ui-settings/./src/views/DailyChart.vue?./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use%5B0%5D!./node_modules/vue-loader/dist/templateLoader.js??ruleSet%5B1%5D.rules%5B3%5D!./node_modules/vue-loader/dist/index.js??ruleSet%5B0%5D.use%5B0%5D");

/***/ }),

/***/ "./src/views/DailyChart.vue":
/*!**********************************!*\
  !*** ./src/views/DailyChart.vue ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DailyChart_vue_vue_type_template_id_2182f87f__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DailyChart.vue?vue&type=template&id=2182f87f */ \"./src/views/DailyChart.vue?vue&type=template&id=2182f87f\");\n/* harmony import */ var _DailyChart_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DailyChart.vue?vue&type=script&lang=js */ \"./src/views/DailyChart.vue?vue&type=script&lang=js\");\n/* harmony import */ var _opt_openWB_dev_openwb_ui_settings_node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/vue-loader/dist/exportHelper.js */ \"./node_modules/vue-loader/dist/exportHelper.js\");\n\n\n\n\n;\nconst __exports__ = /*#__PURE__*/(0,_opt_openWB_dev_openwb_ui_settings_node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_DailyChart_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], [['render',_DailyChart_vue_vue_type_template_id_2182f87f__WEBPACK_IMPORTED_MODULE_0__.render],['__file',\"src/views/DailyChart.vue\"]])\n/* hot reload */\nif (false) {}\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__exports__);\n\n//# sourceURL=webpack://openwb-ui-settings/./src/views/DailyChart.vue?");

/***/ }),

/***/ "./src/views/DailyChart.vue?vue&type=script&lang=js":
/*!**********************************************************!*\
  !*** ./src/views/DailyChart.vue?vue&type=script&lang=js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_40_use_0_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_DailyChart_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_40_use_0_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_DailyChart_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./DailyChart.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/views/DailyChart.vue?vue&type=script&lang=js\");\n \n\n//# sourceURL=webpack://openwb-ui-settings/./src/views/DailyChart.vue?");

/***/ }),

/***/ "./src/views/DailyChart.vue?vue&type=template&id=2182f87f":
/*!****************************************************************!*\
  !*** ./src/views/DailyChart.vue?vue&type=template&id=2182f87f ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": function() { return /* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_40_use_0_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_3_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_DailyChart_vue_vue_type_template_id_2182f87f__WEBPACK_IMPORTED_MODULE_0__.render; }\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_40_use_0_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_3_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_DailyChart_vue_vue_type_template_id_2182f87f__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./DailyChart.vue?vue&type=template&id=2182f87f */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/views/DailyChart.vue?vue&type=template&id=2182f87f\");\n\n\n//# sourceURL=webpack://openwb-ui-settings/./src/views/DailyChart.vue?");

/***/ })

}]);