import{l as W,J as P,K as k,L as E,M as L,P as M,F as T}from"./vendor-fortawesome-396ff0d4.js";import{C as H}from"./index-7f257223.js";import{C as $,p as B,a as z,L as V,b as F,P as N,c as J,T as X,i as Z,d as G,e as U}from"./vendor-chartjs-5f622c20.js";import{_ as Y,p as f,k as h,l as m,q as _,A as u,L as g,y as b,z as Q,u as D,G as R,I as C,x as I}from"./vendor-6e5b23b4.js";import"./vendor-bootstrap-6c75b4fa.js";import"./vendor-jquery-921f231b.js";import"./vendor-axios-86f7a224.js";import"./vendor-sortablejs-b3476726.js";import"./vendor-luxon-1af9332f.js";W.add(P,k,E,L,M);$.register(B,z,V,F,N,J,X,Z,G);const O={name:"OpenwbChart",components:{ChartjsLine:U,FontAwesomeIcon:T},mixins:[H],emits:["sendCommand"],props:{initialChartRange:{type:String,required:!1,validator:function(r){return["day","month"].indexOf(r)!==-1},default:"day"},initialDate:{type:String,required:!1,validator:function(r){return r.match(/^(([0-9]{4})(-[0-9]{2}(-[0-9]{2})?)?)?$/g)},default:""}},data(){return{mqttTopicsToSubscribe:["openWB/general/extern","openWB/log/daily/#","openWB/log/monthly/#","openWB/system/device/+/component/+/config","openWB/chargepoint/+/config","openWB/vehicle/+/name"],currentDate:"",chartRange:"day",chartRequestDate:{day:"",month:"",year:""},datasetTemplates:{"counter-power":{label:"Zähler",unit:"kW",jsonKey:null,borderColor:"rgba(255, 0, 0, 0.7)",backgroundColor:"rgba(255, 10, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"counter-energyImport":{label:"Zähler",unit:"kWh",jsonKey:null,borderColor:"rgba(255, 0, 0, 0.7)",backgroundColor:"rgba(255, 10, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"counter-energyExport":{label:"Zähler",unit:"kWh",jsonKey:null,borderColor:"rgba(0, 255, 105, 0.7)",backgroundColor:"rgba(0, 255, 255, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"pv-power":{label:"PV",unit:"kW",jsonKey:null,borderColor:"rgba(40, 167, 69, 0.7)",backgroundColor:"rgba(10, 255, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"pv-energyExport":{label:"PV",unit:"kWh",jsonKey:null,borderColor:"rgba(40, 167, 69, 0.7)",backgroundColor:"rgba(10, 255, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"bat-power":{label:"Speicher",unit:"kW",jsonKey:null,borderColor:"rgba(253, 126, 20, 0.7)",backgroundColor:"rgba(200, 255, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"bat-energyImport":{label:"Speicher",unit:"kWh",jsonKey:null,borderColor:"rgba(253, 126, 20, 0.7)",backgroundColor:"rgba(200, 255, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"bat-energyExport":{label:"Speicher",unit:"kWh",jsonKey:null,borderColor:"rgba(253, 126, 20, 0.7)",backgroundColor:"rgba(200, 255, 13, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"bat-soc":{label:"Speicher SoC",unit:"%",jsonKey:null,borderColor:"rgba(253, 126, 20, 0.7)",backgroundColor:"rgba(200, 255, 13, 0.3)",borderDash:[10,5],hidden:!1,fill:!1,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",borderWidth:2,data:null,yAxisID:"y3",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"cp-power":{label:"Ladepunkt",unit:"kW",jsonKey:null,borderColor:"rgba(0, 0, 255, 0.7)",backgroundColor:"rgba(0, 0, 255, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!0,borderWidth:1,data:null,yAxisID:"y",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"cp-energyImport":{label:"Ladepunkt",unit:"kWh",jsonKey:null,borderColor:"rgba(0, 0, 255, 0.7)",backgroundColor:"rgba(0, 0, 255, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"ev-soc":{label:"Fahrzeug SoC",unit:"%",jsonKey:null,borderColor:"rgba(0, 0, 255, 0.7)",backgroundColor:"rgba(0, 0, 255, 0.3)",borderDash:[10,5],hidden:!0,fill:!1,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",borderWidth:2,data:null,yAxisID:"y3",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"sh-power":{label:"SmartHome",unit:"kW",jsonKey:null,borderColor:"rgba(232, 62, 140, 0.7)",backgroundColor:"rgba(232, 72, 150, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"sh-energyImport":{label:"SmartHome",unit:"kWh",jsonKey:null,borderColor:"rgba(232, 62, 140, 0.7)",backgroundColor:"rgba(232, 72, 150, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}},"sh-energyExport":{label:"SmartHome",unit:"kWh",jsonKey:null,borderColor:"rgba(232, 62, 140, 0.7)",backgroundColor:"rgba(232, 72, 150, 0.3)",fill:!0,pointStyle:"circle",pointRadius:0,pointHoverRadius:4,cubicInterpolationMode:"monotone",hidden:!1,borderWidth:1,data:null,yAxisID:"y2",parsing:{xAxisKey:"timestamp",yAxisKey:null}}},chartOptions:{plugins:{title:{display:!1},tooltip:{enabled:!0,callbacks:{label:r=>`${r.dataset.label}: ${r.formattedValue} ${r.dataset.unit}`}},legend:{display:!0},zoom:{pan:{enabled:!0,mode:"x",threshold:5},zoom:{wheel:{enabled:!0},pinch:{enabled:!0},mode:"x"}}},elements:{point:{radius:2}},responsive:!0,maintainAspectRatio:!1,interaction:{mode:"index",intersect:!1},scales:{x:{type:"time",time:{unit:"",tooltipFormat:""},display:!0,title:{display:!0,text:""},ticks:{source:"timestamp",font:{size:12},maxTicksLimit:0},grid:{}},y:{position:"left",type:"linear",display:"auto",suggestedMin:0,suggestedMax:0,title:{font:{size:12},display:!0,text:"Leistung [kW]"},grid:{},ticks:{font:{size:12},stepSize:.2,maxTicksLimit:11}},y2:{position:"left",type:"linear",display:"auto",suggestedMin:0,suggestedMax:0,title:{font:{size:12},display:!0,text:"Energie [kWh]"},grid:{},ticks:{font:{size:12},stepSize:.2,maxTicksLimit:11}},y3:{position:"right",type:"linear",display:"auto",suggestedMin:0,suggestedMax:100,title:{font:{size:12},display:!0,text:"SoC [%]"},grid:{display:!1},ticks:{font:{size:12},stepSize:10,maxTicksLimit:11}}}},chartDatasets:{datasets:[]}}},computed:{dateInput(){var r={title:"Datum",type:"date",min:"2018-01-01"};switch(this.chartRange){case"month":r={title:"Monat",type:"month",min:"2018-01"};break;case"year":r={title:"Jahr",type:"year",min:"2018"};break}return r},chartDate:{get(){var r=this.chartRequestDate.year;return this.chartRange!="year"&&(r=r+"-"+this.chartRequestDate.month),this.chartRange=="day"&&(r=r+"-"+this.chartRequestDate.day),r},set(r){let i=r.split("-");this.chartRequestDate.year=i[0],i.length>1?this.chartRequestDate.month=i[1]:this.chartRequestDate.month="",i.length>2?this.chartRequestDate.day=i[2]:this.chartRequestDate.day=""}},chartScaleX(){var r={unit:"minute",tooltipFormat:"DD T",text:"Zeit",maxTicksLimit:24};switch(this.chartRange){case"month":r={unit:"day",tooltipFormat:"D",text:"Tag",maxTicksLimit:31};break;case"year":r={unit:"month",tooltipFormat:"M",text:"Monat",maxTicksLimit:12};break}return r},commandData(){var r={date:this.chartRequestDate.year+this.chartRequestDate.month+this.chartRequestDate.day,day:this.chartRequestDate.year+this.chartRequestDate.month+this.chartRequestDate.day};switch(this.chartRange){case"month":r={date:this.chartRequestDate.year+this.chartRequestDate.month,month:this.chartRequestDate.year+this.chartRequestDate.month};break;case"year":r={date:this.chartRequestDate.year,year:this.chartRequestDate.year};break}return r},baseTopic(){var r="openWB/log/";switch(this.chartRange){case"day":r=r+"daily/";break;case"month":r=r+"monthly/";break;case"year":r=r+"yearly/";break}return r},chartDataRead(){return this.chartDataObject!=null},chartDataHasEntries(){return this.chartDataObject?this.chartDataObject.length>0:!1},chartTotals(){if(this.$store.state.mqtt[this.baseTopic+this.commandData.date]){if(Object.prototype.hasOwnProperty.call(this.$store.state.mqtt[this.baseTopic+this.commandData.date],"totals"))return this.$store.state.mqtt[this.baseTopic+this.commandData.date].totals;{var r={bat:{},counter:{},pv:{},cp:{}};const s=["imported","exported"],l=(d,n,c)=>{const t=c.split(".");s.includes(t[t.length-1])&&(Object.prototype.hasOwnProperty.call(r[t[0]],[t[1]])||(r[t[0]][t[1]]={}),r[t[0]][t[1]][t[2]]=Math.floor(n-d))},a=(d,n,c,t="")=>{for(var e in n)n[e]!==null&&typeof n[e]=="object"?a(d[e],n[e],c,t?t+"."+e:e):c.apply(this,[d[e],n[e],t?t+"."+e:e])};var i=this.$store.state.mqtt[this.baseTopic+this.commandData.date];const o=i[0],p=i[i.length-1];return a(o,p,l),r}}},chartDataObject(){const r=(a,o,p,d,n)=>Math.floor((n-d-(p-o))/(a/1e3/3600))/1e3,i=(a,o)=>(o-a)/1e3;if(this.$store.state.mqtt[this.baseTopic+this.commandData.date]){var s=this.$store.state.mqtt[this.baseTopic+this.commandData.date];Object.prototype.hasOwnProperty.call(s,"entries")&&(console.debug("upgraded chart data received"),s=s.entries);var l=JSON.parse(JSON.stringify(s)).map((a,o,p)=>{if(p.length>o+1){const n=p[o+1],c=(n.timestamp-a.timestamp)*1e3;a.timestamp=a.timestamp*1e3;var d=["pv","counter","bat","cp","sh"];return d.forEach(t=>{Object.entries(a[t]).forEach(([e,v])=>{if(a[t][e])if(n[t][e])Object.keys(v).forEach(()=>{switch(t){case"pv":Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].power=r(c,0,0,a[t][e].exported,n[t][e].exported),a[t][e].energyExport=i(a[t][e].exported,n[t][e].exported));break;case"counter":Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].power=Math.floor((n[t][e].imported-a[t][e].imported-(n[t][e].exported-a[t][e].exported))/(c/1e3/3600))/1e3,a[t][e].powerImport=Math.max(0,a[t][e].power),a[t][e].powerExport=Math.min(0,a[t][e].power)),Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&(a[t][e].energyImport=i(a[t][e].imported,n[t][e].imported)),Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].energyExport=i(a[t][e].exported,n[t][e].exported));break;case"bat":Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].power=r(c,a[t][e].exported,n[t][e].exported,a[t][e].imported,n[t][e].imported),a[t][e].powerImport=Math.max(0,a[t][e].power),a[t][e].powerExport=Math.min(0,a[t][e].power)),Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&(a[t][e].energyImport=i(a[t][e].imported,n[t][e].imported)),Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].energyExport=i(a[t][e].exported,n[t][e].exported));break;case"cp":Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&(a[t][e].power=r(c,a[t][e].exported,n[t][e].exported,a[t][e].imported,n[t][e].imported)),Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&(a[t][e].energyImport=i(a[t][e].imported,n[t][e].imported)),Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].energyExport=i(a[t][e].exported,n[t][e].exported));break;case"sh":Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].power=r(c,a[t][e].exported,n[t][e].exported,a[t][e].imported,n[t][e].imported),a[t][e].powerImport=Math.max(0,a[t][e].power),a[t][e].powerExport=Math.min(0,a[t][e].power)),Object.prototype.hasOwnProperty.call(n[t][e],"imported")&&Object.prototype.hasOwnProperty.call(a[t][e],"imported")&&(a[t][e].energyImport=i(a[t][e].imported,n[t][e].imported)),Object.prototype.hasOwnProperty.call(n[t][e],"exported")&&Object.prototype.hasOwnProperty.call(a[t][e],"exported")&&(a[t][e].energyExport=i(a[t][e].exported,n[t][e].exported));break}});else return})}),a}else return});return l.pop(),l}},chartData(){if(this.chartDataObject){var r=["pv","counter","bat","cp","sh","ev"];const i=this.chartDataObject[this.chartDataObject.length-1];return i&&r.forEach(s=>{Object.prototype.hasOwnProperty.call(i,s)&&Object.entries(i[s]).forEach(([l,a])=>{Object.keys(a).forEach(o=>{this.initDataset(s,l,o)})})}),this.chartDatasets}}},methods:{getCardSubtype(r){switch(r){case"bat":return"warning";case"counter":return"danger";case"cp":return"primary";case"pv":return"success";case"sh":return"pink";default:return"secondary"}},getCardIcon(r){switch(r){case"bat":return["fas","car-battery"];case"counter":return["fas","gauge-high"];case"cp":return["fas","charging-station"];case"pv":return["fas","solar-panel"];case"sh":return["fas","house-signal"];default:return}},getDatasetHidden(r,i){return console.debug("getDatasetHidden",r,i),!1},getTotalsLabel(r,i=void 0,s=void 0){var l="*test*";if(!i&&!s){switch(r){case"bat":return"Speicher";case"counter":return"Zähler";case"pv":return"Wechselrichter";case"cp":return"Ladepunkte";case"sh":return"SmartHome-Geräte";default:console.warn("unknown group key:",r)}return"*"+r+"*"}if(i&&!s){if(i=="all")return"Summe";if(Object.prototype.hasOwnProperty.call(this.$store.state.mqtt[this.baseTopic+this.commandData.date],"names"))return this.$store.state.mqtt[this.baseTopic+this.commandData.date].names[i];var a=i.match(/\d+$/),o="";switch(r){case"cp":o="openWB/chargepoint/"+a+"/config";break;case"ev":o="openWB/vehicle/"+a+"/name";break;default:o="openWB/system/device/+/component/"+a+"/config"}var p=Object.keys(this.getWildcardTopics(o))[0];if(p)switch(r){case"pv":return this.$store.state.mqtt[p].name;case"counter":return this.$store.state.mqtt[p].name;case"bat":return this.$store.state.mqtt[p].name;case"cp":return this.$store.state.mqtt[p].name;case"ev":return this.$store.state.mqtt[p];case"sh":return"SmartHome*";default:console.warn("unknown group key:",r)}else console.warn("topic not found for:",r,i);return"+"+r+"+"+i+"+"}if(i&&s){switch(r){case"bat":case"cp":switch(s){case"imported":return"Ladung";case"exported":return"Entladung";default:console.warn("unknown measurement key:",r,s)}break;case"counter":switch(s){case"imported":return"Bezug/Verbrauch";case"exported":return"Einspeisung/Erzeugung";default:console.warn("unknown measurement key:",r,s)}break;case"pv":switch(s){case"exported":return"Erzeugung";default:console.warn("unknown measurement key:",r,s)}break;case"sh":switch(s){case"imported":case"energyImport":return"Verbrauch";case"exported":case"energyExport":return"Erzeugung";default:console.warn("unknown measurement key:",r,s)}break;default:console.warn("unknown group key:",r)}return"*"+r+"+"+i+"+"+s+"*"}return l},getDatasetLabel(r,i,s,l){var a=["*"+l],o=[];if(i=="all")switch(o.push("Summe"),r){case"pv":a=["PV"];break;case"bat":switch(a=["Speicher"],s){case"soc":a.push("SoC");break}break;case"cp":a=["Ladepunkte"];break}else if(Object.prototype.hasOwnProperty.call(this.$store.state.mqtt[this.baseTopic+this.commandData.date],"names")&&Object.prototype.hasOwnProperty.call(this.$store.state.mqtt[this.baseTopic+this.commandData.date].names,i))a=[this.$store.state.mqtt[this.baseTopic+this.commandData.date].names[i]];else{var p=i.match(/\d+$/),d="";switch(r){case"cp":d="openWB/chargepoint/"+p+"/config";break;case"ev":d="openWB/vehicle/"+p+"/name";break;default:d="openWB/system/device/+/component/"+p+"/config"}var n=Object.keys(this.getWildcardTopics(d))[0];if(n in this.$store.state.mqtt)switch(r){case"pv":a=[this.$store.state.mqtt[n].name];break;case"counter":a=[this.$store.state.mqtt[n].name];break;case"bat":switch(a=[this.$store.state.mqtt[n].name],s){case"soc":a.push("SoC");break}break;case"cp":switch(a=[this.$store.state.mqtt[n].name],s){case"soc":a.push("SoC");break}break;case"sh":switch(a=[this.$store.state.mqtt[n].name],s){case"temp1":case"temp2":case"temp3":a.push(s.charAt(0).toUpperCase()+s.substring(1));break}break;case"ev":switch(a=[this.$store.state.mqtt[n]],s){case"soc":a.push("SoC");break}break}else console.warn("could not get name for dataset",l)}switch(r){case"bat":case"ev":case"cp":switch(s){case"soc":o.push("SoC");break;case"imported":case"energyImport":o.push("Ladung");break;case"exported":case"energyExport":o.push("Entladung");break}break;case"counter":switch(s){case"imported":case"energyImport":o.push("Bezug/Verbrauch");break;case"exported":case"energyExport":o.push("Einspeisung/Erzeugung");break}break;case"sh":switch(s){case"imported":case"energyImport":o.push("Verbrauch");break;case"exported":case"energyExport":o.push("Erzeugung");break}break}return console.debug("getDatasetLabel",r,i,s,l,"Label:",a,o),`${a.join(" ")}${o.length?" ("+o.join(", ")+")":""}`},getDatasetIndex(r){let i=this.chartDatasets.datasets.findIndex(s=>s.jsonKey==r);if(i!=-1)return i},addDataset(r,i,s,l){console.debug("adding new dataset",r,i,s,l);var a=r+"-"+s;if(this.datasetTemplates[a]){var o=JSON.parse(JSON.stringify(this.datasetTemplates[a]));return o.parsing.yAxisKey=l,o.jsonKey=l,o.data=this.chartDataObject,o.label=this.getDatasetLabel(r,i,s,l),o.labelSuffix!=null&&(o.label=o.label+o.labelSuffix),i=="all"&&(o.hidden=!1),this.chartDatasets.datasets.push(o)-1}else console.warn("no matching template found for: "+l+" with template: "+a)},initDataset(r,i,s){var l=[];this.chartRange=="day"?l=["power","soc"]:l=["energyImport","energyExport"];const a=r+"."+i+"."+s;if(l.includes(s)){var o=this.getDatasetIndex(a);const p=this.getDatasetHidden(r,i);o==null&&!p&&(o=this.addDataset(r,i,s,a)),o!=null&&p&&(console.info("component hidden:",r,i,s,o),this.chartDatasets.datasets.splice(o,1))}},setupScaleX(){this.chartOptions.scales.x.time.unit=this.chartScaleX.unit,this.chartOptions.scales.x.time.tooltipFormat=this.chartScaleX.tooltipFormat,this.chartOptions.scales.x.title.text=this.chartScaleX.text,this.chartOptions.scales.x.ticks.maxTicksLimit=this.chartScaleX.maxTicksLimit},requestChart(){if(document.forms.chartForm.reportValidity()){this.setupScaleX(),this.chartDatasets.datasets=[];var i="";switch(this.chartRange){case"day":i="getDailyLog";break;case"month":i="getMonthlyLog";break;case"year":i="getYearlyLog";break}this.$emit("sendCommand",{command:i,data:this.commandData})}else{console.log("form invalid");return}},clearChartData(){this.getWildcardIndexList(this.baseTopic+"+").forEach(r=>{this.$store.commit("removeTopic",`${this.baseTopic}${r}`)})},updateChart(){this.clearChartData(),this.requestChart()},init(){const r=new Date;this.currentDate=String(r.getFullYear()),this.chartRange!="year"&&(this.currentDate=this.currentDate+"-"+String(r.getMonth()+1).padStart(2,"0")),this.chartRange=="day"&&(this.currentDate=this.currentDate+"-"+String(r.getDate()).padStart(2,"0")),this.initialDate==null||this.initialDate==""?(console.log("no initial date for chart found, fallback to today"),this.chartDate=this.currentDate):this.chartDate=this.initialDate,this.updateChart()}},watch:{chartRange(){this.init()}},mounted(){this.init()}},K={class:"chart"},j={name:"chartForm"},tt={key:1},et={key:1},at={class:"openwb-chart"};function rt(r,i,s,l,a,o){const p=f("openwb-base-select-input"),d=f("openwb-base-text-input"),n=f("openwb-base-card"),c=f("openwb-base-alert"),t=f("chartjs-line"),e=f("font-awesome-icon"),v=f("openwb-base-heading");return h(),m("div",K,[_("form",j,[u(n,{title:"Filter",collapsible:!0,collapsed:!1},{default:g(()=>[u(p,{title:"Zeitraum",modelValue:a.chartRange,"onUpdate:modelValue":i[0]||(i[0]=x=>a.chartRange=x),options:[{value:"day",text:"Tag"},{value:"month",text:"Monat"}]},null,8,["modelValue"]),Q("  // ToDo: {value:'year', text:'Jahr'} "),u(d,{title:o.dateInput.title,subtype:o.dateInput.type,min:o.dateInput.min,max:a.currentDate,showQuickButtons:!0,modelValue:o.chartDate,"onUpdate:modelValue":[i[1]||(i[1]=x=>o.chartDate=x),i[2]||(i[2]=x=>o.updateChart())]},null,8,["title","subtype","min","max","modelValue"])]),_:1}),o.chartDataRead?(h(),m("div",tt,[o.chartDataHasEntries?(h(),m("div",et,[u(n,{title:"Diagramm",collapsible:!0,collapsed:!1},{default:g(()=>[_("div",at,[u(t,{data:o.chartData,options:a.chartOptions},null,8,["data","options"])])]),_:1}),u(n,{title:"Summen",collapsible:!0,collapsed:!0},{default:g(()=>[(h(!0),m(R,null,C(o.chartTotals,(x,y)=>(h(),b(n,{key:y,collapsible:!0,collapsed:!0,subtype:o.getCardSubtype(y)},{header:g(()=>[u(e,{"fixed-width":"",icon:o.getCardIcon(y)},null,8,["icon"]),D(" "+I(o.getTotalsLabel(y)),1)]),default:g(()=>[(h(!0),m(R,null,C(x,(A,S)=>(h(),m("div",{key:S},[u(v,null,{default:g(()=>[D(I(o.getTotalsLabel(y,S)),1)]),_:2},1024),(h(!0),m(R,null,C(A,(q,w)=>(h(),m("div",{key:w},[u(d,{title:o.getTotalsLabel(y,S,w),readonly:"",class:"text-right",unit:"kWh","model-value":r.formatNumber(q/1e3,3)},null,8,["title","model-value"])]))),128))]))),128))]),_:2},1032,["subtype"]))),128))]),_:1})])):(h(),b(c,{key:0,subtype:"info"},{default:g(()=>[D(" Es konnten keine Daten für diesen Zeitraum gefunden werden. ")]),_:1}))])):(h(),b(c,{key:0,subtype:"info"},{default:g(()=>[D(" Es wurden noch keine Daten abgerufen. ")]),_:1}))])])}const ut=Y(O,[["render",rt],["__scopeId","data-v-e00a7cd5"],["__file","/opt/openWB-dev/openwb-ui-settings/src/views/Chart.vue"]]);export{ut as default};
