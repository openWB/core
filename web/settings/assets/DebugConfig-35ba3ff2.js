import{l as h,X as w,F as L}from"./vendor-fortawesome-d70ae91e.js";import{C as _}from"./index-a065a044.js";import{_ as k,p as a,k as v,l as C,q as l,A as t,L as o,u as c,x as p}from"./vendor-8521f8a3.js";import"./vendor-bootstrap-1e832c7e.js";import"./vendor-jquery-0e339578.js";import"./vendor-axios-e2840f20.js";import"./vendor-sortablejs-5d1612dc.js";h.add(w);const B={name:"OpenwbDebugging",mixins:[_],components:{FontAwesomeIcon:L},data(){return{mqttTopicsToSubscribe:["openWB/general/extern","openWB/system/debug_level"],mainLog:"-- noch nicht geladen --",internalChargepointLog:"-- noch nicht geladen --",mqttLog:"-- noch nicht geladen --",socLog:"-- noch nicht geladen --",updateLog:"-- noch nicht geladen --"}},methods:{async getFilePromise(n){return this.axios.get(location.protocol+"//"+location.host+n).then(e=>e.data).catch(e=>e.response?`A 404 is expected if running node.js dev server!
`+e.response.data:e.request?e.request:e.message)},loadMainLog(n){n.stopPropagation(),this.mainLog="wird aktualisiert...",this.getFilePromise("/openWB/ramdisk/main.log").then(e=>{this.mainLog=e})},loadInternalChargepointLog(n){n.stopPropagation(),this.internalChargepointLog="wird aktualisiert...",this.getFilePromise("/openWB/ramdisk/internal_chargepoint.log").then(e=>{this.internalChargepointLog=e})},loadMqttLog(n){n.stopPropagation(),this.mqttLog="wird aktualisiert...",this.getFilePromise("/openWB/ramdisk/mqtt.log").then(e=>{this.mqttLog=e})},loadSocLog(n){n.stopPropagation(),this.socLog="wird aktualisiert...",this.getFilePromise("/openWB/ramdisk/soc.log").then(e=>{this.socLog=e})},loadUpdateLog(n){n.stopPropagation(),this.updateLog="wird aktualisiert...",this.getFilePromise("/openWB/data/log/update.log").then(e=>{this.updateLog=e})}}},x={class:"debugging"},P={name:"debugConfigForm"};function D(n,e,F,W,r,d){const m=a("openwb-base-button-group-input"),b=a("openwb-base-alert"),i=a("openwb-base-card"),f=a("openwb-base-submit-buttons"),u=a("font-awesome-icon"),g=a("openwb-base-avatar");return v(),C("div",x,[l("form",P,[t(i,{title:"Protokollierung"},{default:o(()=>[t(m,{title:"Debug Level",buttons:[{buttonValue:30,text:"Warnungen und Fehler"},{buttonValue:20,text:"Info"},{buttonValue:10,text:"Details"}],"model-value":n.$store.state.mqtt["openWB/system/debug_level"],"onUpdate:modelValue":e[0]||(e[0]=s=>n.updateState("openWB/system/debug_level",s))},{help:o(()=>[c(' Wenn der Debug Level auf "Info" oder "Details" gesetzt wird, werden mehr Informationen in die Logdateien geschrieben. Im normalen Betrieb sollte immer "Warnungen und Fehler" gewählt werden, um die Schreibvorgänge auf der SD-Karte zu reduzieren. ')]),_:1},8,["model-value"]),t(b,{subtype:"warning"},{default:o(()=>[c(' Achtung! In den Einstellungen "Info" und "Details" können in den Logdateien sensible Daten wie Benutzernamen und Kennwörter enthalten sein. Diese sollten vor dem Veröffentlichen z.B. im Forum unkenntlich gemacht werden. Private IP-Adressen (z.B. 192.168.x.x) müssen nicht maskiert werden, da diese nicht über das Internet erreichbar sind. ')]),_:1})]),_:1}),t(f,{formName:"debugConfigForm",onSave:e[1]||(e[1]=s=>n.$emit("save")),onReset:e[2]||(e[2]=s=>n.$emit("reset")),onDefaults:e[3]||(e[3]=s=>n.$emit("defaults"))})]),t(i,{title:"Main-Log",class:"mt-3",collapsible:!0,collapsed:!0},{actions:o(()=>[t(g,{class:"bg-success clickable",onClick:e[4]||(e[4]=s=>d.loadMainLog(s))},{default:o(()=>[t(u,{"fixed-width":"",icon:["fas","file-download"]})]),_:1})]),default:o(()=>[l("pre",null,p(r.mainLog),1)]),_:1}),t(i,{title:"Log des internen Ladepunktes",class:"mt-3",collapsible:!0,collapsed:!0},{actions:o(()=>[t(g,{class:"bg-success clickable",onClick:e[5]||(e[5]=s=>d.loadInternalChargepointLog(s))},{default:o(()=>[t(u,{"fixed-width":"",icon:["fas","file-download"]})]),_:1})]),default:o(()=>[l("pre",null,p(r.internalChargepointLog),1)]),_:1}),t(i,{title:"MQTT-Log",class:"mt-3",collapsible:!0,collapsed:!0},{actions:o(()=>[t(g,{class:"bg-success clickable",onClick:e[6]||(e[6]=s=>d.loadMqttLog(s))},{default:o(()=>[t(u,{"fixed-width":"",icon:["fas","file-download"]})]),_:1})]),default:o(()=>[l("pre",null,p(r.mqttLog),1)]),_:1}),t(i,{title:"SoC-Log",class:"mt-3",collapsible:!0,collapsed:!0},{actions:o(()=>[t(g,{class:"bg-success clickable",onClick:e[7]||(e[7]=s=>d.loadSocLog(s))},{default:o(()=>[t(u,{"fixed-width":"",icon:["fas","file-download"]})]),_:1})]),default:o(()=>[l("pre",null,p(r.socLog),1)]),_:1}),t(i,{title:"Protokoll des letzten Updates",class:"mt-3",collapsible:!0,collapsed:!0},{actions:o(()=>[t(g,{class:"bg-success clickable",onClick:e[8]||(e[8]=s=>d.loadUpdateLog(s))},{default:o(()=>[t(u,{"fixed-width":"",icon:["fas","file-download"]})]),_:1})]),default:o(()=>[l("pre",null,p(r.updateLog),1)]),_:1})])}const A=k(B,[["render",D],["__file","/opt/openWB-dev/openwb-ui-settings/src/views/DebugConfig.vue"]]);export{A as default};
